// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: 'org.greenrobot.greendao'

repositories {
    mavenCentral()
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitTimestamp = 'git log -n 1 --format=%at'.execute([], project.rootDir).text.trim() ?: 0

//println "git sha: $gitSha, timestamp: $gitTimestamp, $project.rootDir, $rootDir"

def packageName = 'au.org.ala.mobile.ozatlas'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String

    dataBinding {
        enabled = true
    }

    defaultConfig {
//        applicationId "au.org.ala.mobile.ozatlas"

        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField 'String', 'GIT_SHA', "\"${gitSha}\""
        buildConfigField 'long', 'GIT_TIMESTAMP', "${gitTimestamp}"

        // TODO Move to internal block and add prod values
        //
        buildConfigField 'String', 'BIOCOLLECT_BASE_URL', '"https://biocollect-test.ala.org.au/"'
        buildConfigField 'String', 'PROJECT_ID', '"b3d8e243-1137-4d26-9e15-c5a6f90815eb"'
        buildConfigField 'String', 'PROJECT_ACTIVITY_ID', '"d57961a1-517d-42f2-8446-c373c0c59579"'

        testApplicationId "${packageName}.tests"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

//    signingConfigs {
//        debug {
//            storeFile file("../distribution/debug.keystore")
//            storePassword "android"
//            keyAlias "androiddebugkey"
//            keyPassword "android"
//        }
//        release {
//            storeFile file("../distribution/debug.keystore")
//            storePassword "android"
//            keyAlias "androiddebugkey"
//            keyPassword "android"
//        }
//    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
            debuggable true
//            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard-rules.pro')
//            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        internal {
            applicationId "${packageName}.internal"

        }
        production {
            applicationId "${packageName}"
        }
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        warning 'InvalidPackage'
//        warning 'ResourceType' //TODO remove eventually with ButterKnife 8.0 release
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

configurations {
    internalDebugCompile
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'com.google.dagger:dagger:2.7'

    kapt 'com.google.dagger:dagger-compiler:2.7'
    // this is added to the provided classpath by android { databinding { enabled = true } }, so we need to force it to be enabled for kotlin apt as well
    kapt 'com.android.databinding:compiler:2.3.1' // TODO ensure version number matches the build tools inserted version

    compile project(':db')

    compile "com.android.support:support-v4:${SUPPORT_V4_VERSION}"
    compile "com.android.support:support-annotations:${SUPPORT_V7_VERSION}"
    compile "com.android.support:appcompat-v7:${SUPPORT_V7_VERSION}"
    compile "com.android.support:recyclerview-v7:${SUPPORT_V7_VERSION}"
    compile "com.android.support:cardview-v7:${SUPPORT_V7_VERSION}"
    compile "com.android.support:design:${SUPPORT_V7_VERSION}"//24.2.1"

    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-moshi:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    internalDebugCompile 'com.squareup.retrofit2:retrofit-mock:2.1.0'

//    compile 'com.octo.android.robospice:robospice:1.4.14'
    compile 'org.greenrobot:greendao:3.2.0'

    compile 'com.roughike:bottom-bar:2.0.2'

    compile 'com.jakewharton.timber:timber:4.3.1'
//    compile 'com.jakewharton.byteunits:byteunits:0.9.1'
//    compile 'com.jakewharton.rxbinding:rxbinding-kotlin:0.4.0'
//    internalDebugCompile 'com.jakewharton.madge:madge:1.1.4'
//    internalDebugCompile 'com.jakewharton.scalpel:scalpel:1.1.2'
//    internalDebugCompile 'com.jakewharton:process-phoenix:1.1.0'
//    internalCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
//    productionCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'


    compile 'io.reactivex:rxjava:1.2.1'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxkotlin:0.60.0'
    compile 'com.f2prateek.rx.preferences:rx-preferences:1.0.2'

    compile 'com.jakewharton.threetenabp:threetenabp:1.0.4'
//    internalCompile 'com.mattprecious.telescope:telescope:2.1.0@aar'

    testCompile 'junit:junit:4.12'
    testCompile 'com.google.guava:guava:19.0'
    androidTestCompile 'com.android.support.test:testing-support-lib:0.1'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

// print build finish time
gradle.buildFinished { buildResult ->
    def buildFinishDate = new Date()
    def formattedDate = buildFinishDate.format('yyyy-MM-dd HH:mm:ss')
    println "Build finished: ${formattedDate}"
}